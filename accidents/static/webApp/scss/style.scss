//#region initializing params

//#region Initializing colors
//Main accent color - BLUE color of national flag
$main-blue-color:#1b5693;
//Main accent color - RED color of national flag
$main-red-color:#ff1800;
//Background light color
$background-most-light-color:#f8f8f8;
//Background light color
$background-light-color:#eeeeee;
//Background less light color
$background-less-light-color:#cccccc;
//Foregronud light color
$foreground-light-color:#111111;
//Background dark color
$background-dark-color:#222222;
//Foreground dark color
$foreground-dark-color:#dddddd;
//Foreground more dark color
$foreground-more-dark-color:#777777;

//#region set opacity helpers
@mixin setColorWithOpacity($property, $color, $value) {
    #{$property}:unquote("#{$color}#{$value}");
}

//#endregion
//#region set opacity helpers for borders
@mixin setColorWithOpacityAndInitvalue($property, $color, $value, $init) {
    #{$property}:#{$init $color}#{$value};
}

//#endregion

//#endregion

//#region Initializing fonts
//Normal font size
$font-size-normal:18px;
//Large font size
$font-size-large:26px;
//Small font size
$font-size-small:14px;
//very sall font size
$font-size-very-small:12px;
//#endregion

//#region Z-Index values
//mid z index used in sidebar
$mid-zIndex:20;
//max z index used in searchbar
$max-zIndex:30;
//#endregion
//#endregion

//#region helper function

//#region browser prefixes helper
//use case @include vendor("background-color","blue")
@mixin vendor($property, $value) {
    -webkit-#{$property}: $value;
    -moz-#{$property}: $value;
    -ms-#{$property}: $value;
    #{$property}: $value;
}

//#endregion

//#region add for both hover and focus
//use case @include hocus(){ background:red;}
@mixin hocus {

    &:hover,
    &:focus {
        @content;
    }
}

//#endregion


//#endregion

//#region nutralizing browser behaviours

body,
html {
    border: 0;
    margin: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    font-family: 'Open Sans', sans-serif;
}

button {
    border: 0;

    @include hocus() {
        border: 0;
    }
}

//#endregion

//#region Theme and colors

//#region Light Theme
body {
    background: $background-light-color;
    color: $foreground-light-color;
}

//#endregion

//#region Dark Theme
body {
    &.dark {
        background: $background-dark-color;
        color: $foreground-dark-color;
    }
}

//#endregion

//#endregion

//#region keyframe animations

//#region fade animations 
//used in searchbox suggestion

//#region fade in and move up
@keyframes fadeinandmoveup {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }

    100% {
        opacity: 1;
        transform: translateY(0px);
    }
}

//#endregion

//#region fade out and move down
@keyframes fadeoutandmovedown {
    0% {
        opacity: 1;
        transform: translateY(0px);
    }

    100% {
        opacity: 0;
        transform: translateY(20px);
    }
}

//#endregion

//#endregion

//#region Search box animation
@keyframes searchBoxAnimation {
    0% {
        opacity: 0.5;
    }

    100% {
        opacity: 1;
        font-size: $font-size-large;
        color: $foreground-light-color;
    }
}

//#endregion
//#region Search box animation
@keyframes srchboxcontanim {
    0% {
        transform: translateX(20%);
    }

    100% {
        transform: translateX(0%);
    }
}

//#endregion

//#endregion

//#region elems
.normalbutton {
    border-radius: 5px;
    text-align: center;
    font-size: $font-size-normal;
    line-height: 100%;
    padding: 8px;
}

.normalinput {
    border: 0px;
    background: transparent;
    border-bottom: solid $background-less-light-color;
    text-align: center;
    outline: 0;

    @include hocus() {
        border-bottom: solid $foreground-light-color;
    }
}

//#endregion

//#region main body
#map {
    width: 100%;
    height: 100%;
    display: block;
}

#heatDetail {
    width: 150px;
    height: 70px;
    flex-direction: column;
    display: flex;
    justify-content: center;
    text-align: center;
    font-size: $font-size-small;
    @include vendor('backdrop-filter', blur(20px));
    @include setColorWithOpacity('background', $background-light-color, cb);
    border-radius: 5px;
    position: absolute;
}

#dangerarea {
    z-index: 100;
    background: rgba(255, 0, 0, 0.5);
    //transform-origin: center center;
    border-radius: 50%;
    pointer-events: none;
}

#segmenter {
    display: block;
    width: 60px;
    height: 60px;
    z-index: 200;

    svg {
        stroke: rgba(0, 0, 0, 0.5);
        stroke-dasharray: 4px;
        fill: rgba(0, 0, 0, 0.01);

    }

    &:hover {
        svg {
            stroke: rgba(0, 0, 255, 0.5);
            stroke-width: 4px;
        }
    }
}

#searchBoxContainer {
    position: fixed;
    max-width: 300px;
    height: auto;
    overflow: hidden;
    min-height: 40px;
    width: calc(100vw - 72px);
    margin: 10px 35px;
    right: 0;
    z-index: $max-zIndex;
    border-radius: 7px;
    @include setColorWithOpacity('background', $background-light-color, cb);
    @include setColorWithOpacityAndInitvalue('border', $background-less-light-color, 77, 1px solid);
    @include vendor('backdrop-filter', blur(20px));

    .inputBoxCon {
        width: 100%;
        height: 100%;
        display: flex;

        #searchBox {
            flex: 1;
            padding: 2.5px 5px 2.5px 10px;
            border: 0;
            outline: none;
            font-size: $font-size-small;
            background: transparent;
            pointer-events: all;
        }

        #searchBoxRun {
            width: 40px;
            height: 40px;
        }
    }

    #suggestions {
        cursor: default;
        height: 0px;
        max-height: calc(100vh - 50px);
        width: 100%;
        transition: 0.2s;

        .suggestion {
            @include hocus() {
                @include setColorWithOpacity('background', $background-most-light-color, bb);
            }

            height: 30px;
            width: calc(100% - 20px);
            padding: 5px 10px;
            display: flex;
            align-content: center;
            overflow: hidden;
            border-bottom: 1px solid $background-less-light-color;

            &.fadein {
                animation: fadeinandmoveup 0.5s cubic-bezier(0.075, 0.02, 0.5, 1) forwards;
            }

            &.fadeout {
                animation: fadeoutandmovedown 0.5s cubic-bezier(0.95, 0.82, 0.01, 0) forwards;
            }

            .icon {
                width: 30px;
                height: 30px;
            }

            .content {
                flex: 1;
                height: 30px;
                width: auto;
                font-size: $font-size-small;
                white-space: nowrap;
                padding-left: 5px;
                line-height: 30px;
                overflow: hidden;
                text-overflow: ellipsis;
            }
        }
    }

    &.active {
        //@include setColorWithOpacity('background',$background-light-color,dd);
        @include setColorWithOpacityAndInitvalue('border', $background-less-light-color, aa, 1px solid);
        @include setColorWithOpacityAndInitvalue('box-shadow', $background-less-light-color, aa, 0px 0px 10px 8px);

        .inputBoxCon {
            @include setColorWithOpacity('background', $background-most-light-color, dd);
        }
    }

}

.sidebar {
    position: fixed;
    display: flex;
    flex-direction: column;
    width: 500px;
    height: 100vh;
    right: 0;

    //min-width: 80vw;;
    @media only screen and (max-width: 700px) {
        bottom: 0;
        min-width: 100vw;
        height: 500px;
        margin-top: 40px;
    }

    box-shadow: 2px 0px 15px 2px rgba(0, 0, 0, 0.5);
    max-width: 500px;
    @include vendor('backdrop-filter', blur(20px));
    @include setColorWithOpacity('background', $background-light-color, cb);
    z-index: $mid-zIndex;
    transition: 0.4s ease;
    transform: translateX(100%);

    .vertexpander {
        @media only screen and (max-width: 700px) {
            position: absolute;
            height: 10px;
            width: 50%;
            border-radius: 5px;
            background: white;
            left: 25%;
            top: -20px;
        }
    }

    .expander {
        position: absolute;
        height: 100%;
        width: 5px;
        left: -2.5px;
        cursor: ew-resize;
    }

    .info {
        width: 100%;
        background: white;
        padding: 10px;

        .placename {
            font-size: $font-size-large;
            min-height: 36px;
        }

        .lonlat {
            font-size: $font-size-very-small;
        }

        .accidentSummary {
            margin-top: 15px;
            font-size: $font-size-normal;

            .bike {
                width: 15px;
                height: 15px;
                margin: 0px 5px;
            }
        }
    }

    .menu {
        width: 100%;
        height: 40px;
        overflow: hidden;
        display: flex;
        position: relative;
        box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.2);
        background: rgba(255, 255, 255, 0.7);

        .menuitem {
            @include setColorWithOpacity('background', $background-less-light-color, ee);
            height: calc(100% - 1px);
            width: 100%;

            .allbox>rect {
                mask: url(#menuitemContainer);
            }

            .allbox {
                z-index: 200;
                height: 39px;
                position: absolute;
            }
        }
    }

    .sidebarContent {
        flex-grow: 1;
        position: relative;
        overflow: hidden;

        .sidebaritem {
            overflow-y: auto;
            overflow-x: hidden;
            position: absolute;
            height: 100%;
            width: 100%;
            opacity: 0;
            transition: 0s;
            z-index: 10;

            .visualizationheader {
                display: flex;
                margin: 10px 0px 0px 10px;
                .GraphHeader,
                .ChartHeader,
                .BarHeader {
                    margin: 0px 5px;
                    border-radius: 5px;
                    padding: 10px;
                    width: auto;
                    font-size: $font-size-small;
                    user-select: none;

                    &:hover {
                        @include setColorWithOpacity('background', $foreground-more-dark-color, 22);

                    }
                    &.active {
                        color: $main-blue-color;
                        @include setColorWithOpacity('background', $foreground-more-dark-color, 44);
                    }
                }
            }

            &.active {
                transition: 0.5s ease;
            }

            .AddDetails {
                display: flex;
                width: 100%;
                flex-direction: column;
                margin-top: 15px;

                .item {

                    display: flex;
                    flex-direction: row;
                    width: calc(100% - 30px);
                    height: auto;
                    min-height: 40px;
                    align-items: center;
                    margin: 2.5px 15px;
                    padding: 2px;

                    .heading {
                        flex: 2;
                        overflow: hidden;
                        text-overflow: ellipsis;
                    }

                    .val {
                        flex: 3;
                        overflow: hidden;
                        text-overflow: ellipsis;
                        border: 0;
                        height: 25px;
                        border-radius: 5px;
                        outline: none;
                        padding: 0px 5px;
                        border: 1px solid $background-less-light-color;
                        background: transparent;

                        @include hocus() {
                            border: 1px solid $foreground-more-dark-color;
                        }
                    }
                }
            }

            .summaryDetails {
                display: flex;
                flex-direction: column;
                margin: 15px 5px;

                .item {
                    display: flex;

                    .heading {
                        flex: 2;
                        overflow: hidden;
                        margin: 0px 5px;
                        text-overflow: ellipsis;
                    }

                    .val {
                        flex: 3;
                        overflow: hidden;
                        margin: 0px 5px;
                        text-overflow: ellipsis;

                        .smallimage {
                            width: 50px;
                            height: 50px;
                        }
                    }
                }
            }

            .visualizationContainer {
                width: calc(300% - 120px);
                height: 250px;
                margin-bottom: 70px;
                display: flex;

                .graphContainer {
                    position: relative;
                    margin: 30px 0px 30px 30px;
                    width: 40%;
                    height: 100%;

                    .graphpointer {
                        position: absolute;
                        width: 10px;
                        height: 10px;
                        border-radius: 50%;
                        background: $main-red-color;
                        pointer-events: none;
                        display: none;
                    }

                    #vetline1,
                    #vetline2 {
                        @include hocus() {
                            border-color: $main-blue-color;
                        }

                        &.active {
                            border-color: $main-blue-color;
                        }
                    }

                    .verticalthings {
                        width: 25px;
                        left: -25px;
                        position: absolute;
                        display: flex;
                        height: 100%;
                        flex-direction: column;
                        justify-content: space-between;

                        svg {
                            fill: none;
                            stroke-width: 1px;
                            stroke: $background-less-light-color;
                        }

                        .thing {
                            flex-shrink: 1;
                        }

                        .leftTexts {
                            >text {
                                font-size: $font-size-very-small;
                                user-select: none;
                            }
                        }
                    }

                    .horizontalthings {
                        bottom: -100%;
                        position: absolute;
                        display: flex;
                        justify-content: space-between;
                        width: 100%;

                        svg {
                            fill: none;
                            stroke-width: 1px;
                            stroke: $background-less-light-color;
                        }

                        .thing {
                            flex-shrink: 1;
                        }

                        .bottomTexts {
                            >text {
                                font-size: $font-size-very-small;
                                user-select: none;
                            }
                        }
                    }

                    .vertdashed {
                        position: absolute;
                        border-left: 2px dashed $background-less-light-color;
                        height: 100%;
                        width: 3px;
                        cursor: ew-resize;
                    }

                    svg {
                        width: 100%;
                        height: 250px;
                        stroke: $main-red-color;
                        stroke-width: 1px;
                        stroke-linejoin: round;
                    }

                }

                .barContainer {
                    position: relative;
                    width: 33.33%;
                    height: 100%;

                }

                .chartContainer {
                    position: relative;
                    width: 33.33%;
                    height: 100%;
                }
            }

            .rangeChanger {
                display: none;
                margin: 50px 30px 0px 30px;
                height: 10px;
                position: relative;

                svg {
                    fill: none;
                    stroke-width: 1px;
                    stroke: $background-less-light-color;

                    g {
                        >text {
                            font-size: 12px;
                            user-select: none;
                        }
                    }
                }

                .rangeChangerKnobs {
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    display: flex;
                    align-items: center;
                    display: none;

                    .firstknob,
                    .secondknob {
                        width: 10px;
                        height: 10px;
                        border-radius: 50%;
                        background: $main-blue-color;
                        flex-shrink: 0;
                        position: absolute;
                    }

                    .secondknob {
                        right: 0;
                    }

                    .line {
                        background: $main-blue-color;
                        width: 100%;
                        height: 20%;
                    }
                }
            }

            .dataType {
                margin: 50px 30px 0px 30px;
                width: calc(100% - 60px);
                height: 20px;
                align-items: center;
                justify-content: center;
                display: none;

                .item {
                    width: auto;
                    height: 100%;
                    padding: 0px 10px;

                    .color {
                        height: 20px;
                        width: 20px;
                        border-radius: 50%;
                        margin: auto;
                    }
                }
            }

            .allaccdata,
            .items {
                @include setColorWithOpacityAndInitvalue('border', $foreground-more-dark-color, 22, 1px solid);
            }

            .allaccdata {
                position: relative;
                flex-direction: column;
                margin: 50px 20px 20px 20px;
                display: flex;
                user-select: none;

                &.itemActive {
                    .items {
                        .VCausingType {
                            &::before {
                                left: 0;
                                width: 100%;
                                height: 100%;
                                content: '';
                                @include setColorWithOpacity('background', $main-blue-color, 55);
                                position: absolute;
                            }
                        }
                    }
                }

                &.item2Active {
                    .items {
                        .Time {
                            &::before {
                                left: 0;
                                width: 100%;
                                height: 100%;
                                content: '';
                                @include setColorWithOpacity('background', $main-blue-color, 55);
                                position: absolute;
                            }
                        }
                    }
                }

                .items {
                    width: 100%;
                    position: absolute;
                    display: flex;
                    flex-direction: row;

                    * {
                        text-align: center;
                        position: relative;
                        display: flex;
                        height: 50px;
                        align-items: center;
                        justify-content: center;
                        font-size: $font-size-small;
                    }

                    &:nth-child(odd) {
                        background: $background-less-light-color;

                        &:hover {
                            &::after {
                                @include setColorWithOpacity('background', $main-blue-color, 44);
                            }
                        }

                        &::after {
                            width: 100%;
                            height: 100%;
                            content: '';
                            @include setColorWithOpacity('background', $main-blue-color, 00);
                            position: absolute;
                        }
                    }

                    &:nth-child(even) {
                        &::after {
                            width: 100%;
                            height: 100%;
                            content: '';
                            @include setColorWithOpacity('background', $main-blue-color, 00);
                            position: absolute;
                        }

                        &:hover {
                            &::after {
                                @include setColorWithOpacity('background', $main-blue-color, 44);
                            }
                        }
                    }

                    &:first-child {
                        color: $main-blue-color;
                        display: flex;
                        background: $background-less-light-color;
                        z-index: 20;

                        &:hover {
                            &::after {
                                @include setColorWithOpacity('background', $main-blue-color, "00");
                            }
                        }

                    }

                    &.one {
                        margin-bottom: 5px;
                        position: sticky;
                        top: 0px;
                        display: flex;
                        background: $background-less-light-color;
                    }

                    color: $foreground-more-dark-color;

                    * {
                        width: calc(100% / 8);
                        @include setColorWithOpacityAndInitvalue('border', $foreground-more-dark-color, 22, 1px solid);
                        text-overflow: ellipsis;

                    }

                    &.one {
                        pointer-events: none;

                        * {
                            height: auto;
                            cursor: default;
                            pointer-events: all;

                            @include hocus() {
                                @include setColorWithOpacity('background', $main-blue-color, 55);
                            }
                        }
                    }

                }

                &.small {
                    margin: 50px 5px 5px 5px;

                    .items {
                        * {
                            font-size: 10px;
                            font-weight: bold;
                        }
                    }
                }
            }
        }
    }
}

.shitt {
    width: 100%;
    height: 100%;
    ;
    overflow: visible;
}

rect {
    height: 39px;
    width: 100%;
}

svg {
    width: 100%;
}

svg rect {
    fill: #fff;
}

text {
    font-size: $font-size-normal;
    font-family: 'Open Sans', sans-serif;
    font-weight: 500;
}

#whiteRect {
    @media only screen and (max-width: 700px) {
        width: 100vw;
    }
}

#menuitemContainer {

    position: relative;
}

.moving {
    position: absolute;
    background: $main-blue-color;
    width: 1px;
    height: 100%;
    z-index: 100;
    transition: 0.45s ease;
    //display: none;
}

#sidebarAndSearchContainer {
    height: auto;
    width: auto;

    &.sidebarActive {
        #searchBoxContainer {
            @media only screen and (min-width: 700px) {
                border: 0;
                box-shadow: none;
                min-width: 500px;
                left: null;
                bottom: null;
                margin: 10px 0px;
                animation: srchboxcontanim 0.5s forwards cubic-bezier(1, 0.9, 0.5, 0.25);
            }

            @media only screen and (max-width: 700px) {
                left: 0;
                border: 0;
                margin: 10px 0px;
            }

            .inputBoxCon {
                background: white;

                #searchBox {
                    animation: searchBoxAnimation 0.4s forwards;
                    padding: 0px 10px;
                    flex: 0;
                }
            }
        }

        .sidebar {
            min-width: 500px;
            display: block;
            opacity: 1;
            transform: translateY(0%);
            display: flex;

            >#whiteRect {
                width: 500px;
            }

        }
    }

    &.sidebarResizing {

        .sidebar,
        #searchBoxContainer {
            background: $background-light-color;
            backdrop-filter: none;
            transition: none;
        }
    }

    &.noblur {

        .sidebar,
        #searchBoxContainer {
            backdrop-filter: none;
            background: $background-light-color;
        }
    }
}

//#region
.ol-zoom {
    @media only screen and (max-width:500px) {
        display: none;
    }
}